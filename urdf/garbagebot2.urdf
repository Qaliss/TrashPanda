<?xml version="1.0" ?>
<robot name="trashbot">

 <!-- Init colour -->
  <material name="black">
      <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="dark">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>

  <material name="light_black">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>

  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>

  <material name="orange">
    <color rgba="1.0 0.4235 0.0392 1.0"/>
  </material>

  <material name="brown">
    <color rgba="0.8706 0.8118 0.7647 1.0"/>
  </material>

  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>

  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

    <link name="base_footprint"/>

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link" />
        <origin xyz="0 0 0.010" rpy="0 0 0" />
    </joint>

    <link name ="base_link">
        <visual>
            <origin xyz="0 0 0.03" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://trashbot/meshes/trashbot_base_v1.stl" scale="0.0015 0.0015 0.0015"/>
            </geometry>
            <material name="blue"/>
        </visual>
    
        <collision>
            <origin xyz="0 0 0.03" rpy="0 0 0"/>
            <geometry>
                <box size="0.266 0.266 0.094"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="0 0 0.03" rpy="0 0 0"/>
            <mass value="1.3729096e+00"/>
            <inertia ixx="8.7002718e-01" ixy="-4.7576583e-01" ixz="1.1160499e-01"
                iyy="8.6195418e-01" iyz="-3.5422299e-01"
                izz="1.4612727" />
        </inertial>
    </link>

    <joint name="wheel_left_joint" type="continuous">
        <parent link="base_link"/>
        <child link="wheel_left_link"/>
        <origin xyz="0.16 0 0.045" rpy="0 0 0"/>
        <axis xyz="1 0 0"/>
    </joint>

    <link name="wheel_left_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://trashbot/meshes/trashbot_wheel_v5.stl" scale="0.0015 0.0015 0.0015"/>
            </geometry>
            <material name="red"/>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="0.018" radius="0.033"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="0 0 0" />
            <mass value="2.8498940e-02" />
            <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
        </inertial>
    </link>

    <joint name="wheel_right_joint" type="continuous">
        <parent link="base_link"/>
        <child link="wheel_right_link"/>
        <origin xyz="-0.16 0 0.045" rpy="0 0 0"/>
        <axis xyz="1 0 0"/>
    </joint>

    <link name="wheel_right_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://trashbot/meshes/trashbot_wheel_v5.stl" scale="0.0015 0.0015 0.0015"/>
            </geometry>
            <material name="red"/>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="0.018" radius="0.033"/>
            </geometry>
        </collision>

        <inertial>
            <origin xyz="0 0 0" />
            <mass value="2.8498940e-02" />
            <inertia ixx="1.1175580e-05" ixy="-4.2369783e-11" ixz="-5.9381719e-09"
               iyy="1.1192413e-05" iyz="-1.4400107e-11"
               izz="2.0712558e-05" />
        </inertial>
    </link>

    <!--Caster Front Joint-->
    <joint name="caster_front_wheel_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_front_wheel"/>
        <origin xyz="0 -0.08 0.015"/>
        <axis xyz="0 0 1"/>
    </joint>

    <!-- Front Caster Wheel -->
    <link name="caster_front_wheel">
        <visual>
            <geometry>
                <sphere radius="0.018"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="0.018"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
        </inertial>
    </link>

    <!-- Caster Back Wheel Joint-->
    <joint name="caster_back_wheel_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_back_wheel"/>
        <origin xyz="0 0.08 0.015"/>
        <axis xyz="0 0 1"/>
    </joint>

    <!-- Back Caster Wheel-->
    <link name="caster_back_wheel">
        <visual>
            <geometry>
                <sphere radius="0.018"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="0.018"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
        </inertial>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="0 0.065 0.32" rpy="0 0 0"/>
    </joint>

    <link name="imu_link">
        <visual>
            <geometry>
                <box size="0.02 0.02 0.01"/>
            </geometry>
            <material name="green"/>
        </visual>
    </link>


    <joint name="lidar_joint" type="fixed">
        <parent link="base_link"/>
        <child link="lidar"/>
        <origin xyz="0 0.02 0.12" rpy="0 0 0"/>
    </joint>

    <link name="lidar">
        <visual>
            <geometry>
                <cylinder length="0.05" radius="0.01"/>
            </geometry>
            <material name="green"/>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.05" radius="0.01"/>
            </geometry>      
        </collision>
    </link>   

    <joint name="camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera"/>
        <origin xyz="0 0.02 0.5" rpy="0 0 0"/>
    </joint>

    <link name="camera">
        <visual>
            <geometry>
                <box>
                    <size>0.05 0.05 0.05</size>
                </box>
            </geometry>
            <material name="blue"/>
        </visual>
        <inertial>
            <mass>0.01</mass> <!-- small but nonzero -->
            <inertia>
                <ixx>0.0001</ixx>
                <iyy>0.0001</iyy>
                <izz>0.0001</izz>
                <ixy>0.0</ixy>
                <ixz>0.0</ixz>
                <iyz>0.0</iyz>
            </inertia>
        </inertial>
    </link>

    <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>
        <pose>0 0 0 0 0 0</pose>

        <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
        <topicName>imu/data</topicName>
        <frameName>imu_link</frameName>
        <gaussianNoise>0.0</gaussianNoise>
        <updateRateHZ>30</updateRateHZ>
        <initialOrientationAsReference>false</initialOrientationAsReference>
        </plugin>
    </sensor>
    </gazebo>

    <!-- Gazebo plugin for differential drive -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <update_rate>50</update_rate>
            <left_joint>wheel_left_joint</left_joint>
            <right_joint>wheel_right_joint</right_joint>
            <wheel_separation>0.298634</wheel_separation>
            <wheel_diameter>0.066</wheel_diameter>
            <max_wheel_torque>20</max_wheel_torque>
            <max_wheel_acceleration>1</max_wheel_acceleration>
            <command_topic>cmd_vel</command_topic>
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>
            <odometry_topic>odom</odometry_topic>
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>
        </plugin>
        <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <update_rate>50</update_rate>
            <joint_name>wheel_left_joint</joint_name>
            <joint_name>wheel_right_joint</joint_name>
        </plugin>
    </gazebo>

    <!-- Lidar Plugin -->
    <gazebo reference="lidar">
        <sensor type="ray" name="lidar">
            <pose>0 0 0 0 0 0</pose>
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.2</min>
                    <max>30.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                    <ros>
            <namespace>/</namespace>
            <remapping>~/out:=scan</remapping>
                    </ros>
                    <output_type>sensor_msgs/LaserScan</output_type>
                    <frame_name>lidar</frame_name>
                </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="camera">
        <material>Gazebo/Red</material>
    </gazebo>

    <!-- Camera Plugin -->
    <gazebo reference="camera">
        <sensor type="camera" name="camera">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>600</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

</robot>